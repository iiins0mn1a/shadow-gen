/* automatically generated by rust-bindgen 0.72.1 */

/* Build script: ./gen-kernel-bindings.sh */
/* Kernel tag: v6.12 */

pub type linux_sa_family_t = ::core::ffi::c_ushort;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_sockaddr {
    pub lsa_family: linux_sa_family_t,
    pub lsa_data: [::core::ffi::c_char; 14usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_sockaddr"][::core::mem::size_of::<linux_sockaddr>() - 16usize];
    ["Alignment of linux_sockaddr"][::core::mem::align_of::<linux_sockaddr>() - 2usize];
    ["Offset of field: linux_sockaddr::lsa_family"]
        [::core::mem::offset_of!(linux_sockaddr, lsa_family) - 0usize];
    ["Offset of field: linux_sockaddr::lsa_data"]
        [::core::mem::offset_of!(linux_sockaddr, lsa_data) - 2usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_sync_serial_settings {
    pub clock_rate: ::core::ffi::c_uint,
    pub clock_type: ::core::ffi::c_uint,
    pub loopback: ::core::ffi::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_sync_serial_settings"]
        [::core::mem::size_of::<linux_sync_serial_settings>() - 12usize];
    ["Alignment of linux_sync_serial_settings"]
        [::core::mem::align_of::<linux_sync_serial_settings>() - 4usize];
    ["Offset of field: linux_sync_serial_settings::clock_rate"]
        [::core::mem::offset_of!(linux_sync_serial_settings, clock_rate) - 0usize];
    ["Offset of field: linux_sync_serial_settings::clock_type"]
        [::core::mem::offset_of!(linux_sync_serial_settings, clock_type) - 4usize];
    ["Offset of field: linux_sync_serial_settings::loopback"]
        [::core::mem::offset_of!(linux_sync_serial_settings, loopback) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_te1_settings {
    pub clock_rate: ::core::ffi::c_uint,
    pub clock_type: ::core::ffi::c_uint,
    pub loopback: ::core::ffi::c_ushort,
    pub slot_map: ::core::ffi::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_te1_settings"][::core::mem::size_of::<linux_te1_settings>() - 16usize];
    ["Alignment of linux_te1_settings"][::core::mem::align_of::<linux_te1_settings>() - 4usize];
    ["Offset of field: linux_te1_settings::clock_rate"]
        [::core::mem::offset_of!(linux_te1_settings, clock_rate) - 0usize];
    ["Offset of field: linux_te1_settings::clock_type"]
        [::core::mem::offset_of!(linux_te1_settings, clock_type) - 4usize];
    ["Offset of field: linux_te1_settings::loopback"]
        [::core::mem::offset_of!(linux_te1_settings, loopback) - 8usize];
    ["Offset of field: linux_te1_settings::slot_map"]
        [::core::mem::offset_of!(linux_te1_settings, slot_map) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_raw_hdlc_proto {
    pub encoding: ::core::ffi::c_ushort,
    pub parity: ::core::ffi::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_raw_hdlc_proto"][::core::mem::size_of::<linux_raw_hdlc_proto>() - 4usize];
    ["Alignment of linux_raw_hdlc_proto"][::core::mem::align_of::<linux_raw_hdlc_proto>() - 2usize];
    ["Offset of field: linux_raw_hdlc_proto::encoding"]
        [::core::mem::offset_of!(linux_raw_hdlc_proto, encoding) - 0usize];
    ["Offset of field: linux_raw_hdlc_proto::parity"]
        [::core::mem::offset_of!(linux_raw_hdlc_proto, parity) - 2usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_fr_proto {
    pub t391: ::core::ffi::c_uint,
    pub t392: ::core::ffi::c_uint,
    pub n391: ::core::ffi::c_uint,
    pub n392: ::core::ffi::c_uint,
    pub n393: ::core::ffi::c_uint,
    pub lmi: ::core::ffi::c_ushort,
    pub dce: ::core::ffi::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_fr_proto"][::core::mem::size_of::<linux_fr_proto>() - 24usize];
    ["Alignment of linux_fr_proto"][::core::mem::align_of::<linux_fr_proto>() - 4usize];
    ["Offset of field: linux_fr_proto::t391"]
        [::core::mem::offset_of!(linux_fr_proto, t391) - 0usize];
    ["Offset of field: linux_fr_proto::t392"]
        [::core::mem::offset_of!(linux_fr_proto, t392) - 4usize];
    ["Offset of field: linux_fr_proto::n391"]
        [::core::mem::offset_of!(linux_fr_proto, n391) - 8usize];
    ["Offset of field: linux_fr_proto::n392"]
        [::core::mem::offset_of!(linux_fr_proto, n392) - 12usize];
    ["Offset of field: linux_fr_proto::n393"]
        [::core::mem::offset_of!(linux_fr_proto, n393) - 16usize];
    ["Offset of field: linux_fr_proto::lmi"]
        [::core::mem::offset_of!(linux_fr_proto, lmi) - 20usize];
    ["Offset of field: linux_fr_proto::dce"]
        [::core::mem::offset_of!(linux_fr_proto, dce) - 22usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_fr_proto_pvc {
    pub dlci: ::core::ffi::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_fr_proto_pvc"][::core::mem::size_of::<linux_fr_proto_pvc>() - 4usize];
    ["Alignment of linux_fr_proto_pvc"][::core::mem::align_of::<linux_fr_proto_pvc>() - 4usize];
    ["Offset of field: linux_fr_proto_pvc::dlci"]
        [::core::mem::offset_of!(linux_fr_proto_pvc, dlci) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_fr_proto_pvc_info {
    pub dlci: ::core::ffi::c_uint,
    pub master: [::core::ffi::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_fr_proto_pvc_info"]
        [::core::mem::size_of::<linux_fr_proto_pvc_info>() - 20usize];
    ["Alignment of linux_fr_proto_pvc_info"]
        [::core::mem::align_of::<linux_fr_proto_pvc_info>() - 4usize];
    ["Offset of field: linux_fr_proto_pvc_info::dlci"]
        [::core::mem::offset_of!(linux_fr_proto_pvc_info, dlci) - 0usize];
    ["Offset of field: linux_fr_proto_pvc_info::master"]
        [::core::mem::offset_of!(linux_fr_proto_pvc_info, master) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_cisco_proto {
    pub interval: ::core::ffi::c_uint,
    pub timeout: ::core::ffi::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_cisco_proto"][::core::mem::size_of::<linux_cisco_proto>() - 8usize];
    ["Alignment of linux_cisco_proto"][::core::mem::align_of::<linux_cisco_proto>() - 4usize];
    ["Offset of field: linux_cisco_proto::interval"]
        [::core::mem::offset_of!(linux_cisco_proto, interval) - 0usize];
    ["Offset of field: linux_cisco_proto::timeout"]
        [::core::mem::offset_of!(linux_cisco_proto, timeout) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_x25_hdlc_proto {
    pub dce: ::core::ffi::c_ushort,
    pub modulo: ::core::ffi::c_uint,
    pub window: ::core::ffi::c_uint,
    pub t1: ::core::ffi::c_uint,
    pub t2: ::core::ffi::c_uint,
    pub n2: ::core::ffi::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_x25_hdlc_proto"][::core::mem::size_of::<linux_x25_hdlc_proto>() - 24usize];
    ["Alignment of linux_x25_hdlc_proto"][::core::mem::align_of::<linux_x25_hdlc_proto>() - 4usize];
    ["Offset of field: linux_x25_hdlc_proto::dce"]
        [::core::mem::offset_of!(linux_x25_hdlc_proto, dce) - 0usize];
    ["Offset of field: linux_x25_hdlc_proto::modulo"]
        [::core::mem::offset_of!(linux_x25_hdlc_proto, modulo) - 4usize];
    ["Offset of field: linux_x25_hdlc_proto::window"]
        [::core::mem::offset_of!(linux_x25_hdlc_proto, window) - 8usize];
    ["Offset of field: linux_x25_hdlc_proto::t1"]
        [::core::mem::offset_of!(linux_x25_hdlc_proto, t1) - 12usize];
    ["Offset of field: linux_x25_hdlc_proto::t2"]
        [::core::mem::offset_of!(linux_x25_hdlc_proto, t2) - 16usize];
    ["Offset of field: linux_x25_hdlc_proto::n2"]
        [::core::mem::offset_of!(linux_x25_hdlc_proto, n2) - 20usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub struct linux_ifmap {
    pub mem_start: ::core::ffi::c_ulong,
    pub mem_end: ::core::ffi::c_ulong,
    pub base_addr: ::core::ffi::c_ushort,
    pub irq: ::core::ffi::c_uchar,
    pub dma: ::core::ffi::c_uchar,
    pub port: ::core::ffi::c_uchar,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_ifmap"][::core::mem::size_of::<linux_ifmap>() - 24usize];
    ["Alignment of linux_ifmap"][::core::mem::align_of::<linux_ifmap>() - 8usize];
    ["Offset of field: linux_ifmap::mem_start"]
        [::core::mem::offset_of!(linux_ifmap, mem_start) - 0usize];
    ["Offset of field: linux_ifmap::mem_end"]
        [::core::mem::offset_of!(linux_ifmap, mem_end) - 8usize];
    ["Offset of field: linux_ifmap::base_addr"]
        [::core::mem::offset_of!(linux_ifmap, base_addr) - 16usize];
    ["Offset of field: linux_ifmap::irq"][::core::mem::offset_of!(linux_ifmap, irq) - 18usize];
    ["Offset of field: linux_ifmap::dma"][::core::mem::offset_of!(linux_ifmap, dma) - 19usize];
    ["Offset of field: linux_ifmap::port"][::core::mem::offset_of!(linux_ifmap, port) - 20usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct linux_if_settings {
    pub type_: ::core::ffi::c_uint,
    pub size: ::core::ffi::c_uint,
    pub ifs_ifsu: linux_if_settings__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union linux_if_settings__bindgen_ty_1 {
    pub raw_hdlc: *mut linux_raw_hdlc_proto,
    pub cisco: *mut linux_cisco_proto,
    pub fr: *mut linux_fr_proto,
    pub fr_pvc: *mut linux_fr_proto_pvc,
    pub fr_pvc_info: *mut linux_fr_proto_pvc_info,
    pub x25: *mut linux_x25_hdlc_proto,
    pub sync: *mut linux_sync_serial_settings,
    pub te1: *mut linux_te1_settings,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_if_settings__bindgen_ty_1"]
        [::core::mem::size_of::<linux_if_settings__bindgen_ty_1>() - 8usize];
    ["Alignment of linux_if_settings__bindgen_ty_1"]
        [::core::mem::align_of::<linux_if_settings__bindgen_ty_1>() - 8usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::raw_hdlc"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, raw_hdlc) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::cisco"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, cisco) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::fr"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, fr) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::fr_pvc"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, fr_pvc) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::fr_pvc_info"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, fr_pvc_info) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::x25"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, x25) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::sync"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, sync) - 0usize];
    ["Offset of field: linux_if_settings__bindgen_ty_1::te1"]
        [::core::mem::offset_of!(linux_if_settings__bindgen_ty_1, te1) - 0usize];
};
impl ::core::fmt::Debug for linux_if_settings__bindgen_ty_1 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "linux_if_settings__bindgen_ty_1 {{ union }}")
    }
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_if_settings"][::core::mem::size_of::<linux_if_settings>() - 16usize];
    ["Alignment of linux_if_settings"][::core::mem::align_of::<linux_if_settings>() - 8usize];
    ["Offset of field: linux_if_settings::type_"]
        [::core::mem::offset_of!(linux_if_settings, type_) - 0usize];
    ["Offset of field: linux_if_settings::size"]
        [::core::mem::offset_of!(linux_if_settings, size) - 4usize];
    ["Offset of field: linux_if_settings::ifs_ifsu"]
        [::core::mem::offset_of!(linux_if_settings, ifs_ifsu) - 8usize];
};
impl ::core::fmt::Debug for linux_if_settings {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(
            f,
            "linux_if_settings {{ type: {:?}, size: {:?}, ifs_ifsu: {:?} }}",
            self.type_, self.size, self.ifs_ifsu
        )
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct linux_ifreq {
    pub ifr_ifrn: linux_ifreq__bindgen_ty_1,
    pub ifr_ifru: linux_ifreq__bindgen_ty_2,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union linux_ifreq__bindgen_ty_1 {
    pub ifrn_name: [::core::ffi::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_ifreq__bindgen_ty_1"]
        [::core::mem::size_of::<linux_ifreq__bindgen_ty_1>() - 16usize];
    ["Alignment of linux_ifreq__bindgen_ty_1"]
        [::core::mem::align_of::<linux_ifreq__bindgen_ty_1>() - 1usize];
    ["Offset of field: linux_ifreq__bindgen_ty_1::ifrn_name"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_1, ifrn_name) - 0usize];
};
impl ::core::fmt::Debug for linux_ifreq__bindgen_ty_1 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "linux_ifreq__bindgen_ty_1 {{ union }}")
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union linux_ifreq__bindgen_ty_2 {
    pub ifru_addr: linux_sockaddr,
    pub ifru_dstaddr: linux_sockaddr,
    pub ifru_broadaddr: linux_sockaddr,
    pub ifru_netmask: linux_sockaddr,
    pub ifru_hwaddr: linux_sockaddr,
    pub ifru_flags: ::core::ffi::c_short,
    pub ifru_ivalue: ::core::ffi::c_int,
    pub ifru_mtu: ::core::ffi::c_int,
    pub ifru_map: linux_ifmap,
    pub ifru_slave: [::core::ffi::c_char; 16usize],
    pub ifru_newname: [::core::ffi::c_char; 16usize],
    pub ifru_data: *mut ::core::ffi::c_void,
    pub ifru_settings: linux_if_settings,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_ifreq__bindgen_ty_2"]
        [::core::mem::size_of::<linux_ifreq__bindgen_ty_2>() - 24usize];
    ["Alignment of linux_ifreq__bindgen_ty_2"]
        [::core::mem::align_of::<linux_ifreq__bindgen_ty_2>() - 8usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_addr"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_addr) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_dstaddr"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_dstaddr) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_broadaddr"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_broadaddr) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_netmask"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_netmask) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_hwaddr"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_hwaddr) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_flags"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_flags) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_ivalue"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_ivalue) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_mtu"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_mtu) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_map"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_map) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_slave"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_slave) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_newname"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_newname) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_data"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_data) - 0usize];
    ["Offset of field: linux_ifreq__bindgen_ty_2::ifru_settings"]
        [::core::mem::offset_of!(linux_ifreq__bindgen_ty_2, ifru_settings) - 0usize];
};
impl ::core::fmt::Debug for linux_ifreq__bindgen_ty_2 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "linux_ifreq__bindgen_ty_2 {{ union }}")
    }
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_ifreq"][::core::mem::size_of::<linux_ifreq>() - 40usize];
    ["Alignment of linux_ifreq"][::core::mem::align_of::<linux_ifreq>() - 8usize];
    ["Offset of field: linux_ifreq::ifr_ifrn"]
        [::core::mem::offset_of!(linux_ifreq, ifr_ifrn) - 0usize];
    ["Offset of field: linux_ifreq::ifr_ifru"]
        [::core::mem::offset_of!(linux_ifreq, ifr_ifru) - 16usize];
};
impl ::core::fmt::Debug for linux_ifreq {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(
            f,
            "linux_ifreq {{ ifr_ifrn: {:?}, ifr_ifru: {:?} }}",
            self.ifr_ifrn, self.ifr_ifru
        )
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct linux_ifconf {
    pub ifc_len: ::core::ffi::c_int,
    pub ifc_ifcu: linux_ifconf__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union linux_ifconf__bindgen_ty_1 {
    pub ifcu_buf: *mut ::core::ffi::c_char,
    pub ifcu_req: *mut linux_ifreq,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_ifconf__bindgen_ty_1"]
        [::core::mem::size_of::<linux_ifconf__bindgen_ty_1>() - 8usize];
    ["Alignment of linux_ifconf__bindgen_ty_1"]
        [::core::mem::align_of::<linux_ifconf__bindgen_ty_1>() - 8usize];
    ["Offset of field: linux_ifconf__bindgen_ty_1::ifcu_buf"]
        [::core::mem::offset_of!(linux_ifconf__bindgen_ty_1, ifcu_buf) - 0usize];
    ["Offset of field: linux_ifconf__bindgen_ty_1::ifcu_req"]
        [::core::mem::offset_of!(linux_ifconf__bindgen_ty_1, ifcu_req) - 0usize];
};
impl ::core::fmt::Debug for linux_ifconf__bindgen_ty_1 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "linux_ifconf__bindgen_ty_1 {{ union }}")
    }
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of linux_ifconf"][::core::mem::size_of::<linux_ifconf>() - 16usize];
    ["Alignment of linux_ifconf"][::core::mem::align_of::<linux_ifconf>() - 8usize];
    ["Offset of field: linux_ifconf::ifc_len"]
        [::core::mem::offset_of!(linux_ifconf, ifc_len) - 0usize];
    ["Offset of field: linux_ifconf::ifc_ifcu"]
        [::core::mem::offset_of!(linux_ifconf, ifc_ifcu) - 8usize];
};
impl ::core::fmt::Debug for linux_ifconf {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(
            f,
            "linux_ifconf {{ ifc_len: {:?}, ifc_ifcu: {:?} }}",
            self.ifc_len, self.ifc_ifcu
        )
    }
}
